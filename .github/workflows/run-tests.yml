name: Run Tests

on:
    workflow_call:
      inputs:
        tests: { required: false, type: string, default: "*_test.py"}
        config: { required: true, type: string }
        flags: { required: true, type: string }
        runner: { required: false, type: string, default: "ubuntu-24.04" }
        mgc_version: { required: false, type: string, default: "0.34.0" }
      secrets:
        PROFILES: { required: true }
jobs:
    build:
        runs-on: ${{ inputs.runner }}
        container:
          image: ghcr.io/marmotitude/s3-tester:tests
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v4
              with:
                version: "0.5.9"
              
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: "pyproject.toml"

            - name: Install the project
              run: uv sync --no-dev

            - name: Install MGC
              run: |
                curl -Lo mgc.tar.gz "https://github.com/MagaluCloud/mgccli/releases/download/v0.31.0/mgccli_0.31.0_linux_amd64.tar.gz"
                tar xzvf mgc.tar.gz 
                rm mgc.tar.gz
                cp "./mgc" /usr/local/bin/mgc

            - name: Configure Profiles
              run: |
                echo "${{ secrets.PROFILES }}" > profiles.yaml
                sha256sum profiles.yaml
                sha256sum ./bin/configure_profiles.py
                echo "Configuring Profiles..."
                uv run python ./bin/configure_profiles.py ./profiles.yaml

            - name: Run tests ${{ inputs.tests }}
              run: |
                cd docs
                sha256sum $(which mgc rclone aws)
                uv run pytest --config ${{ inputs.config }} ${{ inputs.tests }} ${{ inputs.flags }} > output.log

            - name: Run tests ${{ inputs.tests }}
              run: |
                cd docs
                mkdir -p ${{ github.workspace }}/artifact/
                uv run pytest --config ${{ inputs.config }} *_test.py ${{ inputs.flags }} | tee ${{ github.workspace }}/artifact/output_${{inputs.tests}}.log
            - uses: actions/upload-artifact@v4
              with:
                name: output_artifact_${{ inputs.tests }}
                path: ${{ github.workspace }}/artifact/output_${{inputs.tests}}.log
