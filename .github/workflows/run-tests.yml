name: Run Tests

on:
    workflow_call:
      inputs:
        name: {required: true, type: string, default: "run_test"}
        tests: { required: false, type: string, default: "*_test.py"}
        config: { required: true, type: string }
        flags: { required: true, type: string }
        runner: { required: false, type: string, default: "ubuntu-24.04" }
        mgc_version: { required: false, type: string, default: "0.34.0" }
        container: { required: false, type: string, default: "ghcr.io/magalucloud/s3-specs:tests_oldest" }
        profile: { required: false, type: string, default: "br-se1" }
      secrets:
        PROFILES: { required: true }
jobs:
    build:
        runs-on: ${{ inputs.runner }}
        container:
          image: ${{ inputs.container }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }}
                  fetch-depth: 0

            - name: Copy pyproject.toml from app
              run: |
                echo "${{inputs.container}}""
                ls -l /
                cp /app/pyproject.toml .

            - name: Show tools version
              run: |
                uv run python -c "import boto3; print(f'boto3 version: {boto3.__version__}')"
                echo "aws version: $(aws --version)"
                echo "mgc version: $(mgc --version)"
                echo "rclone version: $(rclone --version)"

            - name: Format input name
              id: format_name
              run: |
                  FORMATTED_NAME="$(echo "${{ inputs.name }}" | sed 's/[^a-zA-Z0-9.]/_/g')"
                  echo "formatted_name=$FORMATTED_NAME.${{ github.run_id }}" >> "$GITHUB_OUTPUT"
                  echo "formatted_log_name=$FORMATTED_NAME.$(date +'%Y%m%dT%H%M%S')" >> "$GITHUB_OUTPUT"
            - name: Configure Profiles
              run: |
                echo "${{ secrets.PROFILES }}" > profiles.yaml
                sha256sum profiles.yaml
                sha256sum ./bin/configure_profiles.py
                echo "Configuring Profiles..."
                uv run python ./bin/configure_profiles.py ./profiles.yaml
      
            - name: Run tests ${{ inputs.name }}
              run: |
                cd src/s3_specs/docs
                mkdir -p /s3-specs/artifact/
                uv run pytest ${{inputs.tests}}  --config ${{ inputs.config }} --profile ${{ inputs.profile }} ${{ inputs.flags }} | tee /s3-specs/artifact/actions_pytest_output_${{ steps.format_name.outputs.formatted_log_name }}.log
      
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: output_artifact_${{ steps.format_name.outputs.formatted_name }}
                path: "/s3-specs/artifact/actions_pytest_output_${{ steps.format_name.outputs.formatted_log_name }}.log"