name: Testes Automatizados Homologação

on:
  # schedule:
  #   - cron: "0 */2 * * *"  # A cada 2 horas
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        tools:
          - name: latest
            value: latest

        marker:
          - test: "'basic and not mgc'"
            name: basic_and_not_mgc
          - test: "'cold_storage and not mgc'"
            name: cold_storage_and_not_mgc
          - test: "'presign and not mgc'"
            name: presign_and_not_mgc
          - test: "'acl and not mgc'"
            name: acl_and_not_mgc
          - test: "'locking and not mgc'"
            name: locking_and_not_mgc
          - test: "'policy and not mgc'"
            name: policy_and_not_mgc
          - test: "'bucket_versioning and not mgc'"
            name: bucket_versioning_and_not_mgc
          - test: "'bulk_delete'"
            name: bulk_delete

        config:
          - path: "../../../params.example.yaml"
            name: example

    steps:

      - name: Set timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Run tests with report
        id: run_tests
        uses: ./.github/workflows/run-tests-with-report.yml
        with:
          name: "${{ matrix.marker.name }}_2hours.${{ matrix.config.name }}"
          prefix_object_key: "homologacao/automatic_tests/${{ steps.timestamp.outputs.timestamp }}_${{ matrix.marker.name }}_${{ matrix.tools.name }}"
          mark: ${{ matrix.marker.test }}
          container: 'ghcr.io/magalucloud/s3-specs:tests_oldest'
          profile: 'homologacao'
        env:
          PROFILES: ${{ secrets.PROFILES }}

      - name: Upload Reports
        if: always()
        shell: bash
        run: |
          mgc workspace set br-se1
          mgc os objects upload-dir './reports_pdf/' results-test-do-not-delete/${{ steps.run_tests.outputs.prefix_object_key }}/      
      - name: webhook send
        if: always()
        run: |
          cd /app
          ./bin/webhook.py "${{ vars.WEBHOOK_URL }}" "src/s3_specs/docs/s3-specs/artifact/" "${{ github.repository }}" "${{ github.run_id }}" "${{ steps.run_tests.outputs.prefix_object_key }}"
